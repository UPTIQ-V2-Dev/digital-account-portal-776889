
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  isEmailVerified: 'isEmailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  type: 'type',
  expires: 'expires',
  blacklisted: 'blacklisted',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  status: 'status',
  currentStep: 'currentStep',
  accountType: 'accountType',
  customerType: 'customerType',
  applicantId: 'applicantId',
  submittedAt: 'submittedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  sessionId: 'sessionId',
  startedAt: 'startedAt',
  lastActivity: 'lastActivity',
  source: 'source',
  userId: 'userId'
};

exports.Prisma.PersonalInfoScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  suffix: 'suffix',
  dateOfBirth: 'dateOfBirth',
  ssn: 'ssn',
  phone: 'phone',
  email: 'email',
  employmentStatus: 'employmentStatus',
  occupation: 'occupation',
  employer: 'employer',
  workPhone: 'workPhone',
  mailingStreet: 'mailingStreet',
  mailingCity: 'mailingCity',
  mailingState: 'mailingState',
  mailingZipCode: 'mailingZipCode',
  mailingCountry: 'mailingCountry',
  mailingApartment: 'mailingApartment',
  physicalStreet: 'physicalStreet',
  physicalCity: 'physicalCity',
  physicalState: 'physicalState',
  physicalZipCode: 'physicalZipCode',
  physicalCountry: 'physicalCountry',
  physicalApartment: 'physicalApartment',
  applicationId: 'applicationId'
};

exports.Prisma.BusinessProfileScalarFieldEnum = {
  id: 'id',
  businessName: 'businessName',
  dbaName: 'dbaName',
  ein: 'ein',
  entityType: 'entityType',
  industryType: 'industryType',
  dateEstablished: 'dateEstablished',
  businessPhone: 'businessPhone',
  businessEmail: 'businessEmail',
  website: 'website',
  description: 'description',
  isCashIntensive: 'isCashIntensive',
  monthlyTransactionVolume: 'monthlyTransactionVolume',
  monthlyTransactionCount: 'monthlyTransactionCount',
  expectedBalance: 'expectedBalance',
  businessStreet: 'businessStreet',
  businessCity: 'businessCity',
  businessState: 'businessState',
  businessZipCode: 'businessZipCode',
  businessCountry: 'businessCountry',
  businessApartment: 'businessApartment',
  mailingStreet: 'mailingStreet',
  mailingCity: 'mailingCity',
  mailingState: 'mailingState',
  mailingZipCode: 'mailingZipCode',
  mailingCountry: 'mailingCountry',
  mailingApartment: 'mailingApartment',
  applicationId: 'applicationId'
};

exports.Prisma.FinancialProfileScalarFieldEnum = {
  id: 'id',
  annualIncome: 'annualIncome',
  incomeSource: 'incomeSource',
  employmentInfo: 'employmentInfo',
  assets: 'assets',
  liabilities: 'liabilities',
  applicationId: 'applicationId'
};

exports.Prisma.BankingRelationshipScalarFieldEnum = {
  id: 'id',
  bankName: 'bankName',
  accountTypes: 'accountTypes',
  yearsWithBank: 'yearsWithBank',
  financialProfileId: 'financialProfileId'
};

exports.Prisma.AccountActivityScalarFieldEnum = {
  id: 'id',
  activity: 'activity',
  frequency: 'frequency',
  amount: 'amount',
  financialProfileId: 'financialProfileId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  description: 'description',
  features: 'features',
  minimumBalance: 'minimumBalance',
  monthlyFee: 'monthlyFee',
  interestRate: 'interestRate',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EligibilityRuleScalarFieldEnum = {
  id: 'id',
  field: 'field',
  operator: 'operator',
  value: 'value',
  description: 'description',
  productId: 'productId'
};

exports.Prisma.ProductSelectionScalarFieldEnum = {
  id: 'id',
  selectedFeatures: 'selectedFeatures',
  initialDeposit: 'initialDeposit',
  applicationId: 'applicationId',
  productId: 'productId'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  type: 'type',
  fileName: 'fileName',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  uploadedAt: 'uploadedAt',
  verificationStatus: 'verificationStatus',
  verificationProvider: 'verificationProvider',
  verificationConfidence: 'verificationConfidence',
  extractedData: 'extractedData',
  verificationId: 'verificationId',
  verifiedAt: 'verifiedAt',
  signerId: 'signerId',
  applicationId: 'applicationId'
};

exports.Prisma.KYCVerificationScalarFieldEnum = {
  id: 'id',
  status: 'status',
  provider: 'provider',
  verificationId: 'verificationId',
  confidence: 'confidence',
  verifiedAt: 'verifiedAt',
  identityPassed: 'identityPassed',
  identityConfidence: 'identityConfidence',
  addressPassed: 'addressPassed',
  addressConfidence: 'addressConfidence',
  phonePassed: 'phonePassed',
  phoneConfidence: 'phoneConfidence',
  emailPassed: 'emailPassed',
  emailConfidence: 'emailConfidence',
  ofacPassed: 'ofacPassed',
  ofacMatches: 'ofacMatches',
  applicationId: 'applicationId'
};

exports.Prisma.AdditionalSignerScalarFieldEnum = {
  id: 'id',
  role: 'role',
  relationshipToBusiness: 'relationshipToBusiness',
  beneficialOwnershipPercentage: 'beneficialOwnershipPercentage',
  hasSigningAuthority: 'hasSigningAuthority',
  kycStatus: 'kycStatus',
  firstName: 'firstName',
  lastName: 'lastName',
  dateOfBirth: 'dateOfBirth',
  ssn: 'ssn',
  phone: 'phone',
  email: 'email',
  applicationId: 'applicationId'
};

exports.Prisma.RiskAssessmentScalarFieldEnum = {
  id: 'id',
  overallRisk: 'overallRisk',
  riskScore: 'riskScore',
  recommendations: 'recommendations',
  requiresManualReview: 'requiresManualReview',
  assessedAt: 'assessedAt',
  assessedBy: 'assessedBy',
  applicationId: 'applicationId'
};

exports.Prisma.RiskFactorScalarFieldEnum = {
  id: 'id',
  category: 'category',
  factor: 'factor',
  weight: 'weight',
  score: 'score',
  impact: 'impact',
  description: 'description',
  riskAssessmentId: 'riskAssessmentId'
};

exports.Prisma.DisclosureScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  content: 'content',
  version: 'version',
  effectiveDate: 'effectiveDate',
  required: 'required',
  applicableFor: 'applicableFor'
};

exports.Prisma.AgreementScalarFieldEnum = {
  id: 'id',
  acknowledged: 'acknowledged',
  acknowledgedAt: 'acknowledgedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  applicationId: 'applicationId',
  disclosureId: 'disclosureId'
};

exports.Prisma.ElectronicSignatureScalarFieldEnum = {
  id: 'id',
  signerId: 'signerId',
  documentType: 'documentType',
  signatureData: 'signatureData',
  signedAt: 'signedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  biometric: 'biometric',
  applicationId: 'applicationId'
};

exports.Prisma.FundingSetupScalarFieldEnum = {
  id: 'id',
  method: 'method',
  amount: 'amount',
  status: 'status',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  routingNumber: 'routingNumber',
  accountType: 'accountType',
  plaidAccountId: 'plaidAccountId',
  wireInstructions: 'wireInstructions',
  createdAt: 'createdAt',
  processedAt: 'processedAt',
  applicationId: 'applicationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.TokenType = exports.$Enums.TokenType = {
  ACCESS: 'ACCESS',
  REFRESH: 'REFRESH',
  RESET_PASSWORD: 'RESET_PASSWORD',
  VERIFY_EMAIL: 'VERIFY_EMAIL'
};

exports.ProductType = exports.$Enums.ProductType = {
  CHECKING: 'CHECKING',
  SAVINGS: 'SAVINGS',
  MONEY_MARKET: 'MONEY_MARKET',
  CERTIFICATE_DEPOSIT: 'CERTIFICATE_DEPOSIT',
  CREDIT_CARD: 'CREDIT_CARD',
  LOAN: 'LOAN',
  MORTGAGE: 'MORTGAGE',
  INVESTMENT: 'INVESTMENT',
  RETIREMENT: 'RETIREMENT'
};

exports.EligibilityOperator = exports.$Enums.EligibilityOperator = {
  GREATER_THAN_OR_EQUAL: 'GREATER_THAN_OR_EQUAL',
  LESS_THAN_OR_EQUAL: 'LESS_THAN_OR_EQUAL',
  EQUAL: 'EQUAL',
  NOT_EQUAL: 'NOT_EQUAL',
  IN: 'IN',
  NOT_IN: 'NOT_IN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Token: 'Token',
  Application: 'Application',
  PersonalInfo: 'PersonalInfo',
  BusinessProfile: 'BusinessProfile',
  FinancialProfile: 'FinancialProfile',
  BankingRelationship: 'BankingRelationship',
  AccountActivity: 'AccountActivity',
  Product: 'Product',
  EligibilityRule: 'EligibilityRule',
  ProductSelection: 'ProductSelection',
  Document: 'Document',
  KYCVerification: 'KYCVerification',
  AdditionalSigner: 'AdditionalSigner',
  RiskAssessment: 'RiskAssessment',
  RiskFactor: 'RiskFactor',
  Disclosure: 'Disclosure',
  Agreement: 'Agreement',
  ElectronicSignature: 'ElectronicSignature',
  FundingSetup: 'FundingSetup'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/workspace/projects/3b13f12b-7920-4f23-b5c9-b2e889a16019/4a1655c7-1feb-4541-9d6d-d9a02c862ac1/backend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/workspace/projects/3b13f12b-7920-4f23-b5c9-b2e889a16019/4a1655c7-1feb-4541-9d6d-d9a02c862ac1/backend/src/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              Int           @id @default(autoincrement())\n  email           String        @unique\n  name            String?\n  password        String\n  role            Role          @default(USER)\n  isEmailVerified Boolean       @default(false)\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  Token           Token[]\n  applications    Application[]\n}\n\nmodel Token {\n  id          Int       @id @default(autoincrement())\n  token       String\n  type        TokenType\n  expires     DateTime\n  blacklisted Boolean\n  createdAt   DateTime  @default(now())\n  user        User      @relation(fields: [userId], references: [id])\n  userId      Int\n}\n\nenum Role {\n  USER\n  ADMIN\n}\n\nenum TokenType {\n  ACCESS\n  REFRESH\n  RESET_PASSWORD\n  VERIFY_EMAIL\n}\n\nmodel Application {\n  id                String                @id @default(cuid())\n  status            String                @default(\"draft\")\n  currentStep       String                @default(\"account_type\")\n  accountType       String\n  customerType      String                @default(\"new\")\n  applicantId       String\n  submittedAt       DateTime?\n  completedAt       DateTime?\n  createdAt         DateTime              @default(now())\n  updatedAt         DateTime              @updatedAt\n  userAgent         String?\n  ipAddress         String?\n  sessionId         String?\n  startedAt         DateTime?\n  lastActivity      DateTime?\n  source            String?\n  user              User                  @relation(fields: [userId], references: [id])\n  userId            Int\n  personalInfo      PersonalInfo?\n  businessProfile   BusinessProfile?\n  financialProfile  FinancialProfile?\n  productSelections ProductSelection[]\n  documents         Document[]\n  kycVerification   KYCVerification?\n  additionalSigners AdditionalSigner[]\n  riskAssessment    RiskAssessment?\n  agreements        Agreement[]\n  signatures        ElectronicSignature[]\n  fundingSetup      FundingSetup?\n}\n\nmodel PersonalInfo {\n  id                String      @id @default(cuid())\n  firstName         String\n  middleName        String?\n  lastName          String\n  suffix            String?\n  dateOfBirth       String\n  ssn               String\n  phone             String\n  email             String\n  employmentStatus  String\n  occupation        String?\n  employer          String?\n  workPhone         String?\n  mailingStreet     String\n  mailingCity       String\n  mailingState      String\n  mailingZipCode    String\n  mailingCountry    String\n  mailingApartment  String?\n  physicalStreet    String?\n  physicalCity      String?\n  physicalState     String?\n  physicalZipCode   String?\n  physicalCountry   String?\n  physicalApartment String?\n  application       Application @relation(fields: [applicationId], references: [id])\n  applicationId     String      @unique\n}\n\nmodel BusinessProfile {\n  id                       String      @id @default(cuid())\n  businessName             String\n  dbaName                  String?\n  ein                      String\n  entityType               String\n  industryType             String\n  dateEstablished          String\n  businessPhone            String\n  businessEmail            String\n  website                  String?\n  description              String\n  isCashIntensive          Boolean\n  monthlyTransactionVolume Float\n  monthlyTransactionCount  Int\n  expectedBalance          Float\n  businessStreet           String\n  businessCity             String\n  businessState            String\n  businessZipCode          String\n  businessCountry          String\n  businessApartment        String?\n  mailingStreet            String?\n  mailingCity              String?\n  mailingState             String?\n  mailingZipCode           String?\n  mailingCountry           String?\n  mailingApartment         String?\n  application              Application @relation(fields: [applicationId], references: [id])\n  applicationId            String      @unique\n}\n\nmodel FinancialProfile {\n  id                   String                @id @default(cuid())\n  annualIncome         Float\n  incomeSource         String[]\n  employmentInfo       Json?\n  assets               Float\n  liabilities          Float\n  application          Application           @relation(fields: [applicationId], references: [id])\n  applicationId        String                @unique\n  bankingRelationships BankingRelationship[]\n  accountActivities    AccountActivity[]\n}\n\nmodel BankingRelationship {\n  id                 String           @id @default(cuid())\n  bankName           String\n  accountTypes       String[]\n  yearsWithBank      Int\n  financialProfile   FinancialProfile @relation(fields: [financialProfileId], references: [id])\n  financialProfileId String\n}\n\nmodel AccountActivity {\n  id                 String           @id @default(cuid())\n  activity           String\n  frequency          String\n  amount             Float\n  financialProfile   FinancialProfile @relation(fields: [financialProfileId], references: [id])\n  financialProfileId String\n}\n\nenum ProductType {\n  CHECKING\n  SAVINGS\n  MONEY_MARKET\n  CERTIFICATE_DEPOSIT\n  CREDIT_CARD\n  LOAN\n  MORTGAGE\n  INVESTMENT\n  RETIREMENT\n}\n\nenum EligibilityOperator {\n  GREATER_THAN_OR_EQUAL\n  LESS_THAN_OR_EQUAL\n  EQUAL\n  NOT_EQUAL\n  IN\n  NOT_IN\n}\n\nmodel Product {\n  id               String             @id @default(cuid())\n  name             String\n  type             ProductType\n  description      String\n  features         String[]\n  minimumBalance   Float\n  monthlyFee       Float\n  interestRate     Float?\n  isActive         Boolean            @default(true)\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  selections       ProductSelection[]\n  eligibilityRules EligibilityRule[]\n}\n\nmodel EligibilityRule {\n  id          String              @id @default(cuid())\n  field       String\n  operator    EligibilityOperator\n  value       Json\n  description String\n  product     Product             @relation(fields: [productId], references: [id])\n  productId   String\n}\n\nmodel ProductSelection {\n  id               String      @id @default(cuid())\n  selectedFeatures String[]\n  initialDeposit   Float?\n  application      Application @relation(fields: [applicationId], references: [id])\n  applicationId    String\n  product          Product     @relation(fields: [productId], references: [id])\n  productId        String\n}\n\nmodel Document {\n  id                     String      @id @default(cuid())\n  type                   String\n  fileName               String\n  fileSize               Int\n  mimeType               String\n  uploadedAt             DateTime    @default(now())\n  verificationStatus     String      @default(\"pending\")\n  verificationProvider   String?\n  verificationConfidence Float?\n  extractedData          Json?\n  verificationId         String?\n  verifiedAt             DateTime?\n  signerId               String?\n  application            Application @relation(fields: [applicationId], references: [id])\n  applicationId          String\n}\n\nmodel KYCVerification {\n  id                 String      @id @default(cuid())\n  status             String      @default(\"pending\")\n  provider           String\n  verificationId     String\n  confidence         Float\n  verifiedAt         DateTime?\n  identityPassed     Boolean?\n  identityConfidence Float?\n  addressPassed      Boolean?\n  addressConfidence  Float?\n  phonePassed        Boolean?\n  phoneConfidence    Float?\n  emailPassed        Boolean?\n  emailConfidence    Float?\n  ofacPassed         Boolean?\n  ofacMatches        Json?\n  application        Application @relation(fields: [applicationId], references: [id])\n  applicationId      String      @unique\n}\n\nmodel AdditionalSigner {\n  id                            String      @id @default(cuid())\n  role                          String\n  relationshipToBusiness        String?\n  beneficialOwnershipPercentage Float?\n  hasSigningAuthority           Boolean\n  kycStatus                     String      @default(\"pending\")\n  firstName                     String\n  lastName                      String\n  dateOfBirth                   String\n  ssn                           String\n  phone                         String\n  email                         String\n  application                   Application @relation(fields: [applicationId], references: [id])\n  applicationId                 String\n}\n\nmodel RiskAssessment {\n  id                   String       @id @default(cuid())\n  overallRisk          String\n  riskScore            Int\n  recommendations      String[]\n  requiresManualReview Boolean\n  assessedAt           DateTime     @default(now())\n  assessedBy           String\n  application          Application  @relation(fields: [applicationId], references: [id])\n  applicationId        String       @unique\n  factors              RiskFactor[]\n}\n\nmodel RiskFactor {\n  id               String         @id @default(cuid())\n  category         String\n  factor           String\n  weight           Float\n  score            Int\n  impact           String\n  description      String\n  riskAssessment   RiskAssessment @relation(fields: [riskAssessmentId], references: [id])\n  riskAssessmentId String\n}\n\nmodel Disclosure {\n  id            String      @id @default(cuid())\n  type          String\n  title         String\n  content       String\n  version       String\n  effectiveDate DateTime\n  required      Boolean\n  applicableFor String[]\n  agreements    Agreement[]\n}\n\nmodel Agreement {\n  id             String      @id @default(cuid())\n  acknowledged   Boolean     @default(false)\n  acknowledgedAt DateTime?\n  ipAddress      String\n  userAgent      String\n  application    Application @relation(fields: [applicationId], references: [id])\n  applicationId  String\n  disclosure     Disclosure  @relation(fields: [disclosureId], references: [id])\n  disclosureId   String\n}\n\nmodel ElectronicSignature {\n  id            String      @id @default(cuid())\n  signerId      String\n  documentType  String\n  signatureData String\n  signedAt      DateTime    @default(now())\n  ipAddress     String\n  userAgent     String\n  biometric     Json?\n  application   Application @relation(fields: [applicationId], references: [id])\n  applicationId String\n}\n\nmodel FundingSetup {\n  id               String      @id @default(cuid())\n  method           String\n  amount           Float\n  status           String      @default(\"pending\")\n  bankName         String?\n  accountNumber    String?\n  routingNumber    String?\n  accountType      String?\n  plaidAccountId   String?\n  wireInstructions Json?\n  createdAt        DateTime    @default(now())\n  processedAt      DateTime?\n  application      Application @relation(fields: [applicationId], references: [id])\n  applicationId    String      @unique\n}\n",
  "inlineSchemaHash": "4286c2eb981c6a5f2067f64d75b90f58a7e2d0f6937e557587f5f0d4093efdba",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Token\",\"kind\":\"object\",\"type\":\"Token\",\"relationName\":\"TokenToUser\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToUser\"}],\"dbName\":null},\"Token\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TokenType\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"blacklisted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TokenToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Application\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentStep\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApplicationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"personalInfo\",\"kind\":\"object\",\"type\":\"PersonalInfo\",\"relationName\":\"ApplicationToPersonalInfo\"},{\"name\":\"businessProfile\",\"kind\":\"object\",\"type\":\"BusinessProfile\",\"relationName\":\"ApplicationToBusinessProfile\"},{\"name\":\"financialProfile\",\"kind\":\"object\",\"type\":\"FinancialProfile\",\"relationName\":\"ApplicationToFinancialProfile\"},{\"name\":\"productSelections\",\"kind\":\"object\",\"type\":\"ProductSelection\",\"relationName\":\"ApplicationToProductSelection\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"ApplicationToDocument\"},{\"name\":\"kycVerification\",\"kind\":\"object\",\"type\":\"KYCVerification\",\"relationName\":\"ApplicationToKYCVerification\"},{\"name\":\"additionalSigners\",\"kind\":\"object\",\"type\":\"AdditionalSigner\",\"relationName\":\"AdditionalSignerToApplication\"},{\"name\":\"riskAssessment\",\"kind\":\"object\",\"type\":\"RiskAssessment\",\"relationName\":\"ApplicationToRiskAssessment\"},{\"name\":\"agreements\",\"kind\":\"object\",\"type\":\"Agreement\",\"relationName\":\"AgreementToApplication\"},{\"name\":\"signatures\",\"kind\":\"object\",\"type\":\"ElectronicSignature\",\"relationName\":\"ApplicationToElectronicSignature\"},{\"name\":\"fundingSetup\",\"kind\":\"object\",\"type\":\"FundingSetup\",\"relationName\":\"ApplicationToFundingSetup\"}],\"dbName\":null},\"PersonalInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suffix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employmentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occupation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingStreet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingZipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingApartment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalStreet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalZipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"physicalApartment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToPersonalInfo\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"BusinessProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dbaName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ein\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateEstablished\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCashIntensive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"monthlyTransactionVolume\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"monthlyTransactionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expectedBalance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"businessStreet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessZipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessApartment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingStreet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingZipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingApartment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToBusinessProfile\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"FinancialProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"annualIncome\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"incomeSource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employmentInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assets\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"liabilities\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToFinancialProfile\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankingRelationships\",\"kind\":\"object\",\"type\":\"BankingRelationship\",\"relationName\":\"BankingRelationshipToFinancialProfile\"},{\"name\":\"accountActivities\",\"kind\":\"object\",\"type\":\"AccountActivity\",\"relationName\":\"AccountActivityToFinancialProfile\"}],\"dbName\":null},\"BankingRelationship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountTypes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsWithBank\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"financialProfile\",\"kind\":\"object\",\"type\":\"FinancialProfile\",\"relationName\":\"BankingRelationshipToFinancialProfile\"},{\"name\":\"financialProfileId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AccountActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"financialProfile\",\"kind\":\"object\",\"type\":\"FinancialProfile\",\"relationName\":\"AccountActivityToFinancialProfile\"},{\"name\":\"financialProfileId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minimumBalance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"monthlyFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"interestRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"selections\",\"kind\":\"object\",\"type\":\"ProductSelection\",\"relationName\":\"ProductToProductSelection\"},{\"name\":\"eligibilityRules\",\"kind\":\"object\",\"type\":\"EligibilityRule\",\"relationName\":\"EligibilityRuleToProduct\"}],\"dbName\":null},\"EligibilityRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operator\",\"kind\":\"enum\",\"type\":\"EligibilityOperator\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"EligibilityRuleToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ProductSelection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"selectedFeatures\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"initialDeposit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToProductSelection\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductSelection\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"extractedData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"verificationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"signerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToDocument\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"KYCVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"identityPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"identityConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"addressPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"addressConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"phonePassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phoneConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"emailPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ofacPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ofacMatches\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToKYCVerification\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AdditionalSigner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationshipToBusiness\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"beneficialOwnershipPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"hasSigningAuthority\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"kycStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"AdditionalSignerToApplication\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"RiskAssessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"overallRisk\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recommendations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiresManualReview\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"assessedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assessedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToRiskAssessment\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"factors\",\"kind\":\"object\",\"type\":\"RiskFactor\",\"relationName\":\"RiskAssessmentToRiskFactor\"}],\"dbName\":null},\"RiskFactor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"factor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskAssessment\",\"kind\":\"object\",\"type\":\"RiskAssessment\",\"relationName\":\"RiskAssessmentToRiskFactor\"},{\"name\":\"riskAssessmentId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Disclosure\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"effectiveDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicableFor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agreements\",\"kind\":\"object\",\"type\":\"Agreement\",\"relationName\":\"AgreementToDisclosure\"}],\"dbName\":null},\"Agreement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acknowledged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"acknowledgedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"AgreementToApplication\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disclosure\",\"kind\":\"object\",\"type\":\"Disclosure\",\"relationName\":\"AgreementToDisclosure\"},{\"name\":\"disclosureId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ElectronicSignature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signatureData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"biometric\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToElectronicSignature\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"FundingSetup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plaidAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wireInstructions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToFundingSetup\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

